{"version":3,"sources":["../../src/routes/message.js"],"names":["router","get","req","res","context","models","Message","find","messages","send","findById","params","messageId","message","post","create","text","body","user","me","id","remove"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BC,IAA3B,EADT;;AAAA;AACRC,YAAAA,QADQ;AAAA,6CAEPL,GAAG,CAACM,IAAJ,CAASD,QAAT,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAKAR,MAAM,CAACC,GAAP,CAAW,aAAX;AAAA,sEAA0B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BI,QAA3B,CACpBR,GAAG,CAACS,MAAJ,CAAWC,SADS,CADE;;AAAA;AAClBC,YAAAA,OADkB;AAAA,8CAIjBV,GAAG,CAACM,IAAJ,CAASI,OAAT,CAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AAOAb,MAAM,CAACc,IAAP,CAAY,GAAZ;AAAA,sEAAiB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BS,MAA3B,CAAkC;AACtDC,cAAAA,IAAI,EAAEd,GAAG,CAACe,IAAJ,CAASD,IADuC;AAEtDE,cAAAA,IAAI,EAAEhB,GAAG,CAACE,OAAJ,CAAYe,EAAZ,CAAeC;AAFiC,aAAlC,CADP;;AAAA;AACTP,YAAAA,OADS;AAAA,8CAMRV,GAAG,CAACM,IAAJ,CAASI,OAAT,CANQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AASAb,MAAM,UAAN,CAAc,aAAd;AAAA,sEAA6B,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BI,QAA3B,CACpBR,GAAG,CAACS,MAAJ,CAAWC,SADS,CADK;;AAAA;AACrBC,YAAAA,OADqB;;AAAA,iBAKvBA,OALuB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMnBA,OAAO,CAACQ,MAAR,EANmB;;AAAA;AAAA,8CASpBlB,GAAG,CAACM,IAAJ,CAASI,OAAT,CAToB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;eAYeb,M","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { Router } from \"express\";\n\nconst router = Router();\n\nrouter.get(\"/\", async (req, res) => {\n  const messages = await req.context.models.Message.find();\n  return res.send(messages);\n});\n\nrouter.get(\"/:messageId\", async (req, res) => {\n  const message = await req.context.models.Message.findById(\n    req.params.messageId\n  );\n  return res.send(message);\n});\n\nrouter.post(\"/\", async (req, res) => {\n  const message = await req.context.models.Message.create({\n    text: req.body.text,\n    user: req.context.me.id,\n  });\n\n  return res.send(message);\n});\n\nrouter.delete(\"/:messageId\", async (req, res) => {\n  const message = await req.context.models.Message.findById(\n    req.params.messageId\n  );\n\n  if (message) {\n    await message.remove();\n  }\n\n  return res.send(message);\n});\n\nexport default router;\n"],"file":"message.js"}