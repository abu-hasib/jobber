{"version":3,"sources":["../../src/routes/user.js"],"names":["router","get","req","res","context","models","User","find","users","send","post","AuthController","Signup","Login","findById","params","userId","user","console","log","remove"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBC,IAAxB,EADN;;AAAA;AACRC,YAAAA,KADQ;AAAA,6CAEPL,GAAG,CAACM,IAAJ,CAASD,KAAT,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAKAR,MAAM,CAACU,IAAP,CAAY,SAAZ,EAAuBC,iBAAeC,MAAtC;AACAZ,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsBC,iBAAeE,KAArC;AAEAb,MAAM,CAACC,GAAP,CAAW,UAAX;AAAA,sEAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBQ,QAAxB,CAAiCZ,GAAG,CAACa,MAAJ,CAAWC,MAA5C,CADE;;AAAA;AACfC,YAAAA,IADe;AAAA,8CAEdd,GAAG,CAACM,IAAJ,CAASQ,IAAT,CAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAKAjB,MAAM,UAAN,CAAc,UAAd;AAAA,sEAA0B,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBQ,QAAxB,CAAiCZ,GAAG,CAACa,MAAJ,CAAWC,MAA5C,CADK;;AAAA;AAClBC,YAAAA,IADkB;AAGxBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAHwB,iBAKpBA,IALoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMhBA,IAAI,CAACG,MAAL,EANgB;;AAAA;AAAA,8CAQjBjB,GAAG,CAACM,IAAJ,CAASQ,IAAT,CARiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;eAWejB,M","sourcesContent":["import { Router } from \"express\";\nimport AuthController from \"../users/user.controller\";\n\nconst router = Router();\n\nrouter.get(\"/\", async (req, res) => {\n  const users = await req.context.models.User.find();\n  return res.send(users);\n});\n\nrouter.post(\"/signup\", AuthController.Signup);\nrouter.post(\"/login\", AuthController.Login);\n\nrouter.get(\"/:userId\", async (req, res) => {\n  const user = await req.context.models.User.findById(req.params.userId);\n  return res.send(user);\n});\n\nrouter.delete(\"/:userId\", async (req, res) => {\n  const user = await req.context.models.User.findById(req.params.userId);\n\n  console.log(user);\n\n  if (user) {\n    await user.remove();\n  }\n  return res.send(user);\n});\n\nexport default router;\n"],"file":"user.js"}